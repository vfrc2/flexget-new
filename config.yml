
secrets: 'passwd.yaml'

templates:
  # This is just in a template so that it can easily be re-used in multiple tasks (for example in an rss based and discover based task)
  # If you only have one task using your series config, you can place the configure_series plugin directly in that task rather than in a template
  tv:
    configure_series:
      settings:
        # Configure all the series options to your taste
        quality: "<720p"
        path: "{{ secrets.paths.series.download }}"  # This will sort your downloads if you are using one of the output plugins which supports it
      from:
        trakt_list:
          account: '{{ secrets.trakt.username }}'
          list: Follow
          type: shows
          strip_dates: yes

  transmission:
    transmission:
      host: localhost
      port: 9091
      
  pushbullet:
    pushbullet:
      apikey: '{{ secrets.pushbullet.apikey }}'
      title: "[Flexget] {{task}}"  
      body: "{% if series_name is defined %}{{ tvdb_series_name|default(series_name) }} - {{ series_id }}{% if tvdb_ep_name|default(False) %} - {{ tvdb_ep_name }}{% endif %}\n{% else %}{{ title }}{% endif %}"
  

tasks:
  update_series:
    priority: 1
    #manual: yes  # You probably don't need to run this all the time, so you can launch it explicitly with the --tasks flag
    next_trakt_episodes:
      account: '{{ secrets.trakt.username }}'
      list: collection
      context: collected  # You can set this to 'collected' depending on the state of your trakt info
      position: next
    accept_all: yes
    set_series_begin: yes
  
  series:
    priority: 2
    template:
      - tv
      - transmission
      - pushbullet

    disable:
      - torrent_alive
    
    headers:
      cookie: '{{ secrets.lostfilm.cookie }}'

    rss: https://www.lostfilm.tv/rssdd.xml
    verify_ssl_certificates: no
    
    manipulate:
      - title:
          from: url
      - title:
          replace:
            regexp: 'https://www\.lostfilm\.tv/download\.php.+&((.*)((s|S)\d\d(e|E)\d\d)(.*))\.torrent'
            format: '\2 \3 \6'
      - title:
          replace:
            regexp: '\.'
            format: ' '
    
    urlrewrite:
      sitename:
        regexp: 'http://lostfilm.tv/download.php\?(?P<details>.*)'
        format: 'http://www.lostfilm.tv/download.php?\g<details>'
    
  series-local:
    priority: 1
    template:
      - transmission
      - pushbullet
      
    filesystem:
      path: "{{ secrets.paths.upload }}"
      regexp: '.*\.(torrent)$'
      recursive: yes
      
    all_series: yes
    no_entries_ok: yes
    seen: local
    
    manipulate:
      - title:
          replace:
            regexp: '(.*).torrent$'
            format: '\1'
      - title:
          replace:
            regexp: '\.'
            format: ' '
    exec:
      - 'mv "{{location}}" "{{location}}.added"'
      
  
  over-local:
    priority: 2
    template:
      - transmission
      - pushbullet
      
    filesystem:
      path: "{{ secrets.paths.upload }}"
      regexp: '.*\.(torrent)$'
      recursive: yes
      
    seen: local
    no_entries_ok: yes
      
    accept_all: yes
    exec:
      - 'mv "{{location}}" "{{location}}.added"'
  
  series-sort:
    manual: true
    filesystem:
      path: "{{ secrets.paths.series.download }}"
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
      
    seen: local
    all_series: 
      parse_only: yes

    require_field: series_name

    accept_all: yes

    set:
      outdir: "{{secrets.paths.series.target | re_replace('/$','')}}/{{series_name}}"
    
    exec:
      - 'mkdir -p "{{outdir}}"'
      - 'ln "{{location}}" "{{outdir}}/{{title}}{{location | pathext}}"'
    
#------------------------------------
schedules:
  - tasks: [update_series, series]
    interval:
      minutes: 180
  - tasks: [series-local, over-local]
    interval:
      minutes: 5
