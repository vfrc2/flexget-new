
variables: 'passwd.yaml'

templates:
  tv:
    configure_series:
      settings:
        path: "{? path.series ?}"  # This will sort your downloads if you are using one of the output plugins which supports it
      from:
        trakt_list:
          account: '{? trakt.username ?}'
          list: Follow
          type: shows
          strip_dates: yes
  nnmclub:
    manipulate:
      - title: 
          replace:  
            regexp: '.+/'
            format: ''
      - title: 
          replace:  
            regexp: '\(сезон\s+(\d+),\s+серии\s\d+-(\d).*\)'
            format: 's\1e\2'

  transmission:
    transmission:
      host: localhost
      port: 9091

  pushbullet:
    notify:
      entries:
        title: "[Flexget] {{task}}"  
        message: "{% if series_name is defined %}{{ tvdb_series_name|default(series_name) }} - {{ series_id }}{% if tvdb_ep_name|default(False) %} - {{ tvdb_ep_name }}{% endif %}\n{% else %}{{ title }}{% endif %}"
        via:
        - pushbullet:
            api_key: '{? pushbullet.apikey ?}'
      
tasks:
  update_series:
    priority: 1
    #manual: yes  # You probably don't need to run this all the time, so you can launch it explicitly with the --tasks flag
    next_trakt_episodes:
      account: '{? trakt.username ?}'
      list: collection
      context: collected  # You can set this to 'collected' depending on the state of your trakt info
      position: next
    accept_all: yes
    set_series_begin: yes

  series:
    priority: 2
    template: [transmission, tv, nnmclub, pushbullet]
    rss: 'https://nnmclub.to/forum/rss2.php?h=12&f=768,769&r&uk={? nnmclub.uk ?}&dl={? nnmclub.dl ?}'

  movies:
    priority: 3
    template: [transmission, nnmclub, pushbullet]
    rss: 'https://nnmclub.to/forum/rss2.php?h=12&f=216,318,220,224,254&r&uk={? nnmclub.uk ?}&dl={? nnmclub.dl ?}'
    accept_all: true
    set:
      path: "{? path.movies ?}"

  over:
    priority: 4
    template: [transmission, pushbullet]
    rss: 'https://nnmclub.to/forum/rss2.php?dl={? nnmclub.dl ?}&h=24&&uk={? nnmclub.uk ?}'
    accept_all: true
    set:
      path: "{? path.over ?}"

  series-local:
    priority: 11
    template: [transmission, pushbullet]
      
    filesystem:
      path: "{? path.upload ?}"
      regexp: '.*\.(torrent)$'
      recursive: yes
      
    transmission:
      path: "{? path.series ?}"
      
    all_series: yes
    no_entries_ok: yes
    seen: local
    
    manipulate:
      - title:
          replace:
            regexp: '(.*).torrent$'
            format: '\1'
      - title:
          replace:
            regexp: '\.'
            format: ' '
    exec:
      - 'mv "{? location ?}" "{? location ?}.added"'
      
  
  over-local:
    priority: 12
    template: [transmission, pushbullet]
      
    filesystem:
      path: "{? path.upload ?}"
      regexp: '.*\.(torrent)$'
      recursive: yes
      
    seen: local
    no_entries_ok: yes
      
    accept_all: yes
    exec:
      - 'mv "{? location ?}" "{? location ?}.added"'
  
  series-sort:
    manual: true
    template: [pushbullet]
    filesystem:
      path: "{? path.series ?}"
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
      
    seen: local
    all_series: 
      parse_only: yes

    require_field: series_name

    accept_all: yes

    set:
      outdir: "{? path.series | re_replace('/$','')?}/{? series_name ?}"
    
    exec:
      - 'mkdir -p "{? outdir ?}"'
      - 'ln "{? location ?}" "{? outdir ?}/{? title ?}{? location | pathext ?}"'
    
#------------------------------------
schedules:
  - tasks: [update_series, series, movies, over]
    interval:
      minutes: 180
  - tasks: [series-local, over-local]
    interval:
      minutes: 5
